pipeline {
    agent any

    environment {
        IMAGE = "codersdiary/amazon"
        VERSION = "${new Date().format('yyyyMMddHHmmss')}"
        CONTAINER_NAME = "amazon-container"
        FOLDER = "Amazon"
    }

    stages {
        stage('Check Changes') {
            steps {
                script {
                    def changed = sh(script: "git diff --name-only HEAD HEAD~1", returnStdout: true).trim()
                    if (!changed.split('\n').any { it.startsWith(FOLDER + "/") }) {
                        echo "No changes in ${FOLDER}/ folder. Skipping build."
                        currentBuild.result = 'SUCCESS'
                        exit 0
                    }
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE}:${VERSION} Amazon"
                sh "docker tag ${IMAGE}:${VERSION} ${IMAGE}:latest"
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    sh 'echo "$PASS" | docker login -u "$USER" --password-stdin'
                    sh "docker push ${IMAGE}:${VERSION}"
                    sh "docker push ${IMAGE}:latest"
                }
            }
        }

        stage('Redeploy Container') {
            steps {
                script {
                    sh "docker stop ${CONTAINER_NAME} || true"
                    sh "docker rm ${CONTAINER_NAME} || true"
                    sh "docker run -d --name ${CONTAINER_NAME} -p 8081:80 ${IMAGE}:${VERSION}"
                }
            }
        }
    }
}
